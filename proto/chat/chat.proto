syntax = "proto3";
package chat;

import "gate/gate.proto";

// Content 目前使用最简单的字符串, 以后可以扩展
message Message {
  string text = 1;
}

// 单对单消息

service C2C {
  rpc C2CMsg (C2CMsgR) returns (C2CMsgA) {}
  rpc C2CAck (C2CAckR) returns (C2CAckA) {}
}

// 保证消息投递有6步: http://www.52im.net/thread-294-1-1.html

// 1. msg:R
message C2CMsgR {
  gate.Identity identity = 1;

  uint32 from  = 2;
  uint32 to    = 3;
  Message msg  = 4;
  int64 msg_id = 5;
}

// 2. msg:A
message C2CMsgA {
  int64 msg_id = 1;
}

// 6. ack:N
message C2CAckN {
  int64 msg_id = 1;
}

// 3. msg:N
message C2CMsgN {
  uint32 from   = 1;
  Message msg   = 2;
  int64 msg_id = 3;
}

// 4. ack:R
message C2CAckR {
  gate.Identity identity = 1;

  uint32 from  = 2;
  uint32 to    = 3;
  int64 msg_id = 4;
}

// 5. ack:A
message C2CAckA {
  int64 msg_id = 1;
}

// 群聊

message C2GSendRequest {
  uint32 from  = 1;
  uint32 group = 2;
  Message msg  = 3;
}

message C2GSendResponse {
  uint64 msg_id = 1;
}

message C2GPushRequest {
  uint32 from   = 1;
  uint32 group  = 2;
  Message msg   = 3;
  uint64 msg_id = 4;
}

message C2GPushResponse {
  uint64 msg_id = 1;
}

// 拉离线消息

message C2SPullMsgRequest {
  uint32 uid    = 1;
  uint64 msg_id = 2;
  uint32 limit  = 3;
}

message PullMsg {
  uint32 from     = 1;
  uint32 group    = 2;
  Message msg     = 3;
  uint64 msg_id   = 4;
  int64 send_time = 5;
}

message C2SPullMsgResponse {
  repeated PullMsg msg = 1;
}